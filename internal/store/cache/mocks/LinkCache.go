// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/Neko2h/shortener/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// LinkCache is an autogenerated mock type for the LinkCache type
type LinkCache struct {
	mock.Mock
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *LinkCache) Get(_a0 context.Context, _a1 string) (*entity.LinkDB, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *entity.LinkDB
	if rf, ok := ret.Get(0).(func(context.Context, string) *entity.LinkDB); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.LinkDB)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Set provides a mock function with given fields: _a0, _a1
func (_m *LinkCache) Set(_a0 context.Context, _a1 *entity.LinkDB) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.LinkDB) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewLinkCacheT interface {
	mock.TestingT
	Cleanup(func())
}

// NewLinkCache creates a new instance of LinkCache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLinkCache(t NewLinkCacheT) *LinkCache {
	mock := &LinkCache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
