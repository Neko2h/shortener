name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PG_URL: postgres://postgres:postgres@localhost/links?sslmode=disable

jobs:

  tests:
    name: App Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: links
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "6379:6379"

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ^1.18
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate
    - name: Run migrations postgres
      run: make migrateup-pg

    - name: Run go vet
      run: go vet ./...

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck ./...

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3  

    # - name: Integrational tests
    #   run: make tests-integration

    # - name: Unit tests
    #   run: make tests-unit

    - name: Run coverage
      run: make tests-all

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.out